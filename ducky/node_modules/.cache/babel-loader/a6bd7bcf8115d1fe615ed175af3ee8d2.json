{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/Ducky/ducky/src/view/components/posts/PostEdit.js\";\nimport React from \"react\";\nimport { PollEditor } from \"../poll/PollEditor\";\nimport { Media, MediaType } from \"../../../model/objects/Media\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { MediaEdit } from \"../media/MediaEdit\";\nexport var PostEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostEdit, _React$Component);\n\n  function PostEdit(props) {\n    var _this;\n\n    _classCallCheck(this, PostEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostEdit).call(this, props)); // TODO: test\n\n    var post = new Post();\n    post.media.push(new Media(null, MediaType.video, 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'));\n    post.media.push(new Media(null, MediaType.image, 'http://dummyimage.com/116x100.png/cc0000/ffffff'));\n    post.media.push(new Media(null, MediaType.audio, 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3'));\n    post.media.push(new Media(null, MediaType.image, 'http://dummyimage.com/211x100.png/5fa2dd/ffffff'));\n    _this.state = {\n      post: post,\n      pollFlag: false,\n      postFlag: false,\n      postButtonFlag: 'active'\n    };\n    return _this;\n  }\n\n  _createClass(PostEdit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pollContent = null;\n\n      if (this.state.pollFlag) {\n        pollContent = React.createElement(PollEditor, {\n          timer: true,\n          handleDelete: function handleDelete(e) {\n            e.preventDefault();\n\n            _this2.setState({\n              pollFlag: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      var mediaContent = null;\n\n      if (this.state.post.media.length > 0) {\n        mediaContent = React.createElement(MediaEdit, {\n          media: this.state.post.media,\n          handleDelete: function handleDelete(i) {\n            var post = _this2.state.post;\n            post.media.splice(i, 1);\n\n            _this2.setState({\n              post: post\n            });\n          },\n          handleChange: function handleChange(e, i) {\n            var post = _this2.state.post;\n            post.media[i].description = e.target.value;\n\n            _this2.setState({\n              post: post\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n\n      var moreContent = null;\n\n      if (pollContent || mediaContent) {\n        moreContent = React.createElement(\"div\", {\n          className: \"post-edit-more-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, mediaContent, pollContent);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"post-edit-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-edit-profil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.user.profil_picture_src,\n        alt: this.props.user.names,\n        className: \"post-edit-profil-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-sub-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-edit-text-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"post-edit-text\",\n        rows: 5,\n        cols: 40,\n        wrap: \"hard\",\n        placeholder: \"Quoi de neuf ?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), moreContent, React.createElement(\"div\", {\n        className: \"post-edit-actions-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-edit-actions-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-file\",\n        id: \"post-edit-action-icon-file-image\",\n        type: \"file\",\n        accept: \"images\",\n        onChange: function onChange(e) {\n          var media = _this2.state.media;\n          var input = document.getElementById('post-edit-action-icon-file-image');\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = input.files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var file = _step.value;\n              var m = new Media(null, MediaType.image, e.target.result);\n              var img = document.createElement('img');\n              img.file = file;\n              var reader = new FileReader();\n\n              reader.onload = function (aImg) {\n                return function (e) {\n                  aImg.src = e.target.result;\n                };\n              }(img);\n\n              reader.readAsDataURL(file);\n              m.img = img;\n              media.push(m);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.setState({\n            media: media\n          });\n\n          console.log(_this2.state.media);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Image\",\n        title: \"Image\",\n        src: require('../../../ressources/icons/image.png'),\n        onClick: function onClick(e) {\n          e.preventDefault();\n          var input = document.getElementById('post-edit-action-icon-file-image');\n          input.click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Vid\\xE9o\",\n        title: \"Vid\\xE9o\",\n        src: require('../../../ressources/icons/video.png'),\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Audio\",\n        title: \"Audio\",\n        src: require('../../../ressources/icons/audio.png'),\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Localisation\",\n        title: \"Localisation\",\n        src: require('../../../ressources/icons/location.png'),\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Sondage\",\n        title: \"Sondage\",\n        src: require('../../../ressources/icons/poll.png'),\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          _this2.setState({\n            pollFlag: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"post-edit-action-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"post-edit-action-icon-image\",\n        type: \"image\",\n        alt: \"Audience\",\n        title: \"Audience\",\n        src: require('../../../ressources/icons/audience.png'),\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"post-edit-actions-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-edit-action-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: 'post-edit-action-text-button ' + 'post-edit-action-text-button-' + this.state.postButtonFlag,\n        type: \"button\",\n        value: \"Publier\",\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return PostEdit;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/Ducky/ducky/src/view/components/posts/PostEdit.js"],"names":["React","PollEditor","Media","MediaType","Post","MediaEdit","PostEdit","props","post","media","push","video","image","audio","state","pollFlag","postFlag","postButtonFlag","pollContent","e","preventDefault","setState","mediaContent","length","i","splice","description","target","value","moreContent","user","profil_picture_src","names","input","document","getElementById","files","file","m","result","img","createElement","reader","FileReader","onload","aImg","src","readAsDataURL","console","log","require","click","onClick","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PollEditor } from \"../poll/PollEditor\";\nimport { Media, MediaType } from \"../../../model/objects/Media\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { MediaEdit } from \"../media/MediaEdit\";\n\nexport class PostEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // TODO: test\n        let post = new Post();\n        post.media.push(\n            new Media(null, MediaType.video, \n                    ('http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'))\n        );\n        post.media.push(\n            new Media(null, MediaType.image, \n                    ('http://dummyimage.com/116x100.png/cc0000/ffffff'))\n        );\n        post.media.push(\n            new Media(null, MediaType.audio, \n                    ('https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3'))\n        );\n        post.media.push(\n            new Media(null, MediaType.image, \n                    ('http://dummyimage.com/211x100.png/5fa2dd/ffffff'))\n        );\n\n        this.state = {\n            post: post,\n            pollFlag: false,\n            postFlag: false,\n            postButtonFlag: 'active',\n        }\n    }\n\n    render() {\n        let pollContent = null;\n        if (this.state.pollFlag) {\n            pollContent = (\n                <PollEditor \n                    timer={true} \n                    handleDelete={(e) => {\n                        e.preventDefault();\n                        this.setState({ pollFlag : false });\n                    }}/>\n            );  \n        }\n\n        let mediaContent = null;\n        if (this.state.post.media.length > 0) {\n            mediaContent = (\n                <MediaEdit\n                    media={this.state.post.media}\n                    handleDelete={(i) => {\n                        let post = this.state.post;\n                        post.media.splice(i, 1);\n                        this.setState({ post: post });\n                    }} \n                    handleChange={(e, i) => {\n                        let post = this.state.post;\n                        post.media[i].description = e.target.value;\n                        this.setState({ post: post });\n                    }}/>\n            );\n        }\n\n        let moreContent = null;\n        if (pollContent || mediaContent) {\n            moreContent = (\n                <div className='post-edit-more-content'>\n                    {mediaContent}\n                    {pollContent}\n                </div>\n            );\n        }\n\n        return (\n            <div className='post-edit-container'>\n                <div className='post-edit-profil'>\n                    <img\n                        src={this.props.user.profil_picture_src} \n                        alt={this.props.user.names}\n                        className='post-edit-profil-image'/>\n                </div>\n                <div className='post-edit-sub-container'>\n                    <div className='post-edit-text-container'>\n                        <textarea \n                            className='post-edit-text'\n                            rows={5}\n                            cols={40}\n                            wrap='hard'\n                            placeholder='Quoi de neuf ?'\n                            >\n                        </textarea>\n                    </div>\n                    {moreContent}\n                    <div className='post-edit-actions-bar'>\n                        <div className='post-edit-actions-icons'>\n                            <div className='post-edit-action-icon'>\n                                <input\n                                    className='post-edit-action-icon-file'\n                                    id='post-edit-action-icon-file-image'\n                                    type='file'\n                                    accept='images'\n                                    onChange={(e) => {\n                                        let media = this.state.media;\n                                        let input = document.getElementById('post-edit-action-icon-file-image');\n                                        for (let file of input.files) {\n                                            let m = new Media(null, MediaType.image, e.target.result);    \n                                            let img = document.createElement('img');\n                                            img.file = file;\n                                            let reader = new FileReader();\n                                            reader.onload = (\n                                                function(aImg) {\n                                                    return function(e) { \n                                                        aImg.src = e.target.result; \n                                                    }; \n                                                }\n                                            )(img);\n                                            reader.readAsDataURL(file);\n                                            m.img = img;\n                                            media.push(m);\n                                        }\n                                        this.setState({media: media});\n                                        console.log(this.state.media);\n                                    }} />\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Image'\n                                    title='Image'\n                                    src={require('../../../ressources/icons/image.png')}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        let input = document.getElementById('post-edit-action-icon-file-image');\n                                        input.click();\n                                    }} />\n                            </div>\n                            <div className='post-edit-action-icon'>\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Vidéo'\n                                    title='Vidéo'\n                                    src={require('../../../ressources/icons/video.png')}\n                                    onClick={this.props.onClick} />\n                            </div>\n                            <div className='post-edit-action-icon'>\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Audio'\n                                    title='Audio'\n                                    src={require('../../../ressources/icons/audio.png')}\n                                    onClick={this.props.onClick} />\n                            </div>\n                            <div className='post-edit-action-icon'>\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Localisation'\n                                    title='Localisation'\n                                    src={require('../../../ressources/icons/location.png')}\n                                    onClick={this.props.onClick} />\n                            </div>\n                            <div className='post-edit-action-icon'>\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Sondage'\n                                    title='Sondage'\n                                    src={require('../../../ressources/icons/poll.png')}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        this.setState({ pollFlag: true});\n                                    }} />\n                            </div>\n                            <div className='post-edit-action-icon'>\n                                <input \n                                    className='post-edit-action-icon-image'\n                                    type='image'\n                                    alt='Audience'\n                                    title='Audience'\n                                    src={require('../../../ressources/icons/audience.png')}\n                                    onClick={this.props.onClick} />\n                            </div>\n                        </div>\n                        <div className='post-edit-actions-text'>\n                            <div className='post-edit-action-text'>\n                                <input \n                                    className={\n                                        'post-edit-action-text-button ' +\n                                        'post-edit-action-text-button-' + this.state.postButtonFlag\n                                    }\n                                    type='button'\n                                    value='Publier'\n                                    onClick={this.props.onClick} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}