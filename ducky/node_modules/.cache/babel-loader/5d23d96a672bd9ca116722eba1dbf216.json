{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nexport var UserServices =\n/*#__PURE__*/\nfunction () {\n  function UserServices() {\n    _classCallCheck(this, UserServices);\n  }\n\n  _createClass(UserServices, null, [{\n    key: \"consoleError\",\n    value: function consoleError(error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log(error.request);\n      } else {\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    }\n  }, {\n    key: \"login\",\n    value: function login(username, password, success, failure) {\n      var _this = this;\n\n      this.instance.post('/1/users/login', {\n        username: username,\n        mail: username,\n        phone: username,\n        password: password\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"logout\",\n    value: function logout(user_id, success, failure) {\n      this.instance.post('/1/users/:user_id/logout', null, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"createUser\",\n    value: function createUser(user, success, failure) {\n      var _this2 = this;\n\n      this.instance.post('/1/users', {\n        username: user.username,\n        password: user.password,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        sex: user.sex,\n        phone: user.phone,\n        mail: user.mail,\n        city: user.city,\n        country: user.country,\n        birthday: user.birthday,\n        creation_time: new Date()\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this2.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUsers\",\n    value: function getUsers(users_ids, success, failure) {\n      var _this3 = this;\n\n      this.instance.get('/1/users', {\n        users_ids: users_ids.join(',')\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this3.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(user_id, success, failure) {\n      var _this4 = this;\n\n      this.instance.get('/1/users/:user_id', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this4.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUserMe\",\n    value: function getUserMe(success, failure) {\n      var _this5 = this;\n\n      this.instance.get('/1/users/me').then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this5.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUserByUsername\",\n    value: function getUserByUsername(username, success, failure) {\n      var _this6 = this;\n\n      this.instance.get('/1/users/by/username/:username', {\n        username: username\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this6.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"updateUser\",\n    value: function updateUser(user, success, failure) {\n      var _this7 = this;\n\n      this.instance.patch('/1/users/:user_id', {\n        username: user.username,\n        password: user.password,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        sex: user.sex,\n        phone: user.phone,\n        mail: user.mail,\n        city: user.city,\n        country: user.country,\n        birthday: user.birthday,\n        biography: user.biography\n      }, {\n        user_id: user.id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this7.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(user_id, success, failure) {\n      var _this8 = this;\n\n      this.instance.delete('/1/users/:user_id', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this8.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getFollowers\",\n    value: function getFollowers(user_id, success, failure) {\n      var _this9 = this;\n\n      this.instance.get('/1/users/:user_id/followers', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this9.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getFollowings\",\n    value: function getFollowings(user_id, success, failure) {\n      var _this10 = this;\n\n      this.instance.get('/1/users/:user_id/followings', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this10.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addFollower\",\n    value: function addFollower(user_id, follower_id, success, failure) {\n      var _this11 = this;\n\n      this.instance.post('/1/users/:user_id/followers', {\n        follower_id: follower_id,\n        time: new Date()\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this11.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addFollowing\",\n    value: function addFollowing(user_id, following_id, success, failure) {\n      var _this12 = this;\n\n      this.instance.post('/1/users/:user_id/followings', {\n        following_id: following_id,\n        time: new Date()\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this12.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"delFollower\",\n    value: function delFollower(user_id, follower_id, success, failure) {\n      var _this13 = this;\n\n      this.instance.delete('1/users/:user_id/followers/:follower_id', {\n        user_id: user_id,\n        follower_id: follower_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this13.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"delFollowing\",\n    value: function delFollowing(user_id, following_id, success, failure) {\n      var _this14 = this;\n\n      this.instance.delete('/1/users/:user_id/followings/:following_id', {\n        user_id: user_id,\n        following_id: following_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this14.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getBlocks\",\n    value: function getBlocks(user_id, success, failure) {\n      var _this15 = this;\n\n      this.instance.get('/1/users/:user_id/blocks', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this15.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getBlocksBy\",\n    value: function getBlocksBy(user_id, success, failure) {\n      var _this16 = this;\n\n      this.instance.get('/1/users/:user_id/blocksby', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this16.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(user_id, blocked_id, reason, success, failure) {\n      var _this17 = this;\n\n      this.instance.post('/1/users/:user_id/blocks', {\n        blocked_id: blocked_id,\n        time: new Date(),\n        reason: reason\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this17.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"delBlock\",\n    value: function delBlock(user_id, blocked_id, success, failure) {\n      var _this18 = this;\n\n      this.instance.delete('/1/users/:user_id/blocks', {\n        user_id: user_id,\n        blocked_id: blocked_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this18.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getReports\",\n    value: function getReports(user_id, success, failure) {\n      var _this19 = this;\n\n      this.instance.get('/1/users/:user_id/reports', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this19.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getReportsBy\",\n    value: function getReportsBy(user_id, success, failure) {\n      var _this20 = this;\n\n      this.instance.get('/1/users/:user_id/reportsby', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this20.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addReport\",\n    value: function addReport(user_id, reported_id, reason, success, failure) {\n      var _this21 = this;\n\n      this.instance.post('/1/users/:user_id/reports', {\n        reported_id: reported_id,\n        time: new Date(),\n        reason: reason\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this21.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getViews\",\n    value: function getViews(user_id, success, failure) {\n      var _this22 = this;\n\n      this.instance.get('/1/users/:user_id/views', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this22.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getViewsBy\",\n    value: function getViewsBy(user_id, success, failure) {\n      var _this23 = this;\n\n      this.instance.get('/1/users/:user_id/viewsby', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this23.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addView\",\n    value: function addView(user_id, viewed_id, success, failure) {\n      var _this24 = this;\n\n      this.instance.post('/1/users/:user_id/views', {\n        viewed_id: viewed_id,\n        time: new Date()\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this24.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUserMessages\",\n    value: function getUserMessages(user_id, success, failure) {\n      var _this25 = this;\n\n      this.instance.get('/1/users/:user_id/messages', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this25.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"createUserMessages\",\n    value: function createUserMessages(user_id, type, messages_id, other_user_id, group_id, success, failure) {\n      var _this26 = this;\n\n      this.instance.post('/1/users/:user_id/messages', {\n        type: type,\n        messages_id: messages_id,\n        other_user_id: other_user_id,\n        group_id: group_id\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this26.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"updateUserMessages\",\n    value: function updateUserMessages(user_id, messages_id, other_user_id, group_id, success, failure) {\n      var _this27 = this;\n\n      this.instance.patch('/1/users/:user_id/messages', {\n        messages_id: messages_id,\n        other_user_id: other_user_id,\n        group_id: group_id\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this27.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"deleteUserSimpleMessages\",\n    value: function deleteUserSimpleMessages(user_id, other_user_id, success, failure) {\n      var _this28 = this;\n\n      this.instance.delete('/1/users/:user_id/messages/simple/:other_user_id', {\n        user_id: user_id,\n        other_user_id: other_user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this28.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"deleteUserGroupMessages\",\n    value: function deleteUserGroupMessages(user_id, group_id, success, failure) {\n      var _this29 = this;\n\n      this.instance.delete('/1/users/:user_id/messages/group/:group_id', {\n        user_id: user_id,\n        group_id: group_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this29.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUserPosts\",\n    value: function getUserPosts(user_id, success, failure) {\n      var _this30 = this;\n\n      this.instance.get('/1/users/:user_id/posts', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this30.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addUserPost\",\n    value: function addUserPost(user_id, post_id, success, failure) {\n      var _this31 = this;\n\n      this.insatnce.post('/1/users/:user_id/posts', {\n        post_id: post_id\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this31.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"delUserPost\",\n    value: function delUserPost(user_id, post_id, success, failure) {\n      var _this32 = this;\n\n      this.instance.delete('/1/users/:user_id/posts/:post_id', {\n        user_id: user_id,\n        post_id: post_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this32.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"getUserLikedPosts\",\n    value: function getUserLikedPosts(user_id, success, failure) {\n      var _this33 = this;\n\n      this.instance.get('/1/users/:user_id/likedposts', {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this33.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"addUserLikedPost\",\n    value: function addUserLikedPost(user_id, post_id, success, failure) {\n      var _this34 = this;\n\n      this.instance.post('/1/users/:user_id/likedposts', {\n        post_id: post_id\n      }, {\n        user_id: user_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this34.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"delUserLikedPost\",\n    value: function delUserLikedPost(user_id, post_id, success, failure) {\n      var _this35 = this;\n\n      this.instance.delete('/1/users/:user_id/likedposts/:post_id', {\n        user_id: user_id,\n        post_id: post_id\n      }).then(function (response) {\n        success(response);\n      }).catch(function (error) {\n        _this35.consoleError(error);\n\n        failure(error);\n      }).then(function () {});\n    }\n  }]);\n\n  return UserServices;\n}();\nUserServices.instance = axios.create({\n  baseURL: 'http://localhost:4444',\n  timeout: 1000,\n  headers: {\n    'X-Custom-Header': 'foobar'\n  }\n});","map":{"version":3,"sources":["/home/labicquette/L3/Ducky/ducky/src/model/services/UserServices.js"],"names":["axios","UserServices","error","response","console","log","data","status","headers","request","message","config","username","password","success","failure","instance","post","mail","phone","then","catch","consoleError","user_id","user","firstname","lastname","sex","city","country","birthday","creation_time","Date","users_ids","get","join","patch","biography","id","delete","follower_id","time","following_id","blocked_id","reason","reported_id","viewed_id","type","messages_id","other_user_id","group_id","post_id","insatnce","create","baseURL","timeout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport class UserServices {\n\n    static instance = axios.create({\n\t\t\tbaseURL: 'http://localhost:4444',\n\t\t\ttimeout: 1000,\n\t\t\theaders: {'X-Custom-Header': 'foobar'}\n\t});\n\n    static consoleError(error) {\n        if (error.response) {\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n        } else if (error.request) {\n            console.log(error.request);\n        } else {\n            console.log('Error', error.message);\n        }\n        console.log(error.config);\n    }\n\n    static login(username, password, success, failure) {\n        this.instance.post('/1/users/login', {\n            username: username,\n            mail: username,\n            phone: username,\n            password: password,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static logout(user_id, success, failure) {\n        this.instance.post('/1/users/:user_id/logout', null, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {failure(error)})\n        .then(() => {});\n    }\n\n    static createUser(user, success, failure) {\n        this.instance.post('/1/users', {\n            username: user.username,\n            password: user.password,\n            firstname: user.firstname, \n            lastname: user.lastname, \n            sex: user.sex, \n            phone: user.phone, \n            mail: user.mail, \n            city: user.city,\n            country: user.country,\n            birthday: user.birthday, \n            creation_time: new Date()\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUsers(users_ids, success, failure) {\n        this.instance.get('/1/users', {\n            users_ids: users_ids.join(','),\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUser(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUserMe(success, failure) {\n        this.instance.get('/1/users/me')\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUserByUsername(username, success, failure) {\n        this.instance.get('/1/users/by/username/:username', {\n            username: username,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static updateUser(user, success, failure) {\n        this.instance.patch('/1/users/:user_id', {\n            username: user.username,\n            password: user.password,\n            firstname: user.firstname, \n            lastname: user.lastname, \n            sex: user.sex, \n            phone: user.phone, \n            mail: user.mail, \n            city: user.city,\n            country: user.country,\n            birthday: user.birthday, \n            biography: user.biography\n        }, {\n            user_id: user.id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static deleteUser(user_id, success, failure) {\n        this.instance.delete('/1/users/:user_id', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getFollowers(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/followers', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getFollowings(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/followings', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addFollower(user_id, follower_id, success, failure) {\n        this.instance.post('/1/users/:user_id/followers', {\n            follower_id: follower_id,\n            time: new Date(),\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addFollowing(user_id, following_id, success, failure) {\n        this.instance.post('/1/users/:user_id/followings', {\n            following_id: following_id,\n            time: new Date(),\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static delFollower(user_id, follower_id, success, failure) {\n        this.instance.delete('1/users/:user_id/followers/:follower_id', {\n            user_id: user_id,\n            follower_id: follower_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n    \n    static delFollowing(user_id, following_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/followings/:following_id', {\n            user_id: user_id,\n            following_id: following_id,\n        })        \n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getBlocks(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/blocks', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getBlocksBy(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/blocksby', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addBlock(user_id, blocked_id, reason, success, failure) {\n        this.instance.post('/1/users/:user_id/blocks', {\n            blocked_id: blocked_id,\n            time: new Date(),\n            reason: reason,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static delBlock(user_id, blocked_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/blocks', {\n            user_id: user_id,\n            blocked_id: blocked_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getReports(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/reports', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getReportsBy(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/reportsby', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addReport(user_id, reported_id, reason, success, failure) {\n        this.instance.post('/1/users/:user_id/reports', {\n            reported_id: reported_id,\n            time: new Date(),\n            reason: reason,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getViews(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/views', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getViewsBy(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/viewsby', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addView(user_id, viewed_id, success, failure) {\n        this.instance.post('/1/users/:user_id/views', {\n            viewed_id: viewed_id,\n            time: new Date(),\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUserMessages(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/messages', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static createUserMessages(user_id, \n                            type, \n                            messages_id,\n                            other_user_id, \n                            group_id, \n                            success, \n                            failure) {\n        this.instance.post('/1/users/:user_id/messages', {\n            type: type,\n            messages_id: messages_id,\n            other_user_id: other_user_id,\n            group_id: group_id,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }    \n\n    static updateUserMessages(user_id, \n                            messages_id, \n                            other_user_id, \n                            group_id, \n                            success, \n                            failure) {\n        this.instance.patch('/1/users/:user_id/messages', {\n            messages_id: messages_id,\n            other_user_id: other_user_id,\n            group_id: group_id,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static deleteUserSimpleMessages(user_id, other_user_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/messages/simple/:other_user_id', {\n            user_id: user_id,\n            other_user_id: other_user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static deleteUserGroupMessages(user_id, group_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/messages/group/:group_id', {\n            user_id: user_id,\n            group_id: group_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUserPosts(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/posts', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    } \n\n    static addUserPost(user_id, post_id, success, failure) {\n        this.insatnce.post('/1/users/:user_id/posts', {\n            post_id: post_id,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static delUserPost(user_id, post_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/posts/:post_id', {\n            user_id: user_id,\n            post_id: post_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static getUserLikedPosts(user_id, success, failure) {\n        this.instance.get('/1/users/:user_id/likedposts', {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static addUserLikedPost(user_id, post_id, success, failure) {\n        this.instance.post('/1/users/:user_id/likedposts', {\n            post_id: post_id,\n        }, {\n            user_id: user_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n    static delUserLikedPost(user_id, post_id, success, failure) {\n        this.instance.delete('/1/users/:user_id/likedposts/:post_id', {\n            user_id: user_id,\n            post_id: post_id,\n        })\n        .then((response) => {success(response)})\n        .catch((error) => {\n            this.consoleError(error);\n            failure(error);\n        })\n        .then(() => {});\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}