{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/techWeb/Ducky/ducky/src/view/components/media/MediaEditItem.js\";\nimport React from \"react\";\nimport { MediaType } from \"../../../model/objects/Media\";\nexport var MediaEditItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaEditItem, _React$Component);\n\n  function MediaEditItem() {\n    _classCallCheck(this, MediaEditItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MediaEditItem).apply(this, arguments));\n  }\n\n  _createClass(MediaEditItem, [{\n    key: \"render\",\n    value: function render() {\n      var content = null;\n\n      switch (this.props.media.type) {\n        case MediaType.image:\n          content = React.createElement(\"img\", {\n            className: \"media-edit-item-content media-edit-item-image\",\n            src: this.props.media.src,\n            alt: this.props.media.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11\n            },\n            __self: this\n          });\n          break;\n\n        case MediaType.audio:\n          content = React.createElement(\"audio\", {\n            className: \"media-edit-item-content media-edit-item-audio\",\n            src: this.props.media.src,\n            controls: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          });\n          break;\n\n        case MediaType.video:\n          content = React.createElement(\"video\", {\n            className: \"media-edit-item-content media-edit-item-video\",\n            src: this.props.media.src,\n            controls: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n          break;\n\n        case MediaType.document:\n          // TODO:\n          break;\n\n        default:\n          // TODO:\n          break;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"media-edit-item-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-edit-item-sub-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, content, React.createElement(\"input\", {\n        className: \"media-edit-item-delete\",\n        type: \"image\",\n        src: require('../../../ressources/icons/close.png'),\n        alt: \"Supprimer\",\n        title: \"Supprimer\",\n        onClick: this.props.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-edit-item-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"media-edit-item-description-text\",\n        type: \"text\",\n        placeholder: \"Ajouter une description\",\n        value: this.props.media.description,\n        onChange: this.props.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MediaEditItem;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/techWeb/Ducky/ducky/src/view/components/media/MediaEditItem.js"],"names":["React","MediaType","MediaEditItem","content","props","media","type","image","src","description","audio","video","document","require","handleDelete","handleChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEa;AACL,UAAIC,OAAO,GAAG,IAAd;;AACA,cAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAzB;AACI,aAAKL,SAAS,CAACM,KAAf;AACIJ,UAAAA,OAAO,GACH;AACI,YAAA,SAAS,EAAC,+CADd;AAEI,YAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,GAF1B;AAGI,YAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMA;;AAEJ,aAAKR,SAAS,CAACS,KAAf;AACIP,UAAAA,OAAO,GACH;AACI,YAAA,SAAS,EAAC,+CADd;AAEI,YAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,GAF1B;AAGI,YAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMA;;AAEJ,aAAKP,SAAS,CAACU,KAAf;AACIR,UAAAA,OAAO,GACH;AACI,YAAA,SAAS,EAAC,+CADd;AAEI,YAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBG,GAF1B;AAGI,YAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMA;;AAEJ,aAAKP,SAAS,CAACW,QAAf;AACI;AACA;;AAEJ;AACI;AACA;AAlCR;;AAqCA,aACI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,OADL,EAEI;AACI,QAAA,SAAS,EAAC,wBADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,GAAG,EAAEU,OAAO,CAAC,qCAAD,CAHhB;AAII,QAAA,GAAG,EAAC,WAJR;AAKI,QAAA,KAAK,EAAC,WALV;AAMI,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,kCADd;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,yBAHhB;AAII,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAX,CAAiBI,WAJ5B;AAKI,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWW,YALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CADJ;AAsBH;AA/DL;;AAAA;AAAA,EAAmCf,KAAK,CAACgB,SAAzC","sourcesContent":["import React from \"react\";\nimport { MediaType } from \"../../../model/objects/Media\";\n\nexport class MediaEditItem extends React.Component {\n\n    render() {\n        let content = null;\n        switch (this.props.media.type) {\n            case MediaType.image:\n                content = (\n                    <img\n                        className='media-edit-item-content media-edit-item-image'\n                        src={this.props.media.src}\n                        alt={this.props.media.description} />\n                );\n                break;\n\n            case MediaType.audio:\n                content = (\n                    <audio\n                        className='media-edit-item-content media-edit-item-audio'\n                        src={this.props.media.src}\n                        controls />\n                );\n                break;\n\n            case MediaType.video:\n                content = (\n                    <video\n                        className='media-edit-item-content media-edit-item-video'\n                        src={this.props.media.src}\n                        controls />\n                );\n                break;\n\n            case MediaType.document:\n                // TODO:\n                break;\n\n            default:\n                // TODO:\n                break;\n        }\n\n        return (\n            <div className='media-edit-item-container'>\n                <div className='media-edit-item-sub-container'>\n                    {content}\n                    <input\n                        className='media-edit-item-delete'\n                        type='image'\n                        src={require('../../../ressources/icons/close.png')}\n                        alt='Supprimer'\n                        title='Supprimer'\n                        onClick={this.props.handleDelete} />\n                </div>\n                <div className='media-edit-item-description'>\n                    <input\n                        className='media-edit-item-description-text'\n                        type='text'\n                        placeholder='Ajouter une description'\n                        value={this.props.media.description}\n                        onChange={this.props.handleChange} />\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}