{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/techWeb/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/techWeb/Ducky/ducky/src/view/components/messages/MessageView.js\";\nimport React from \"react\";\nimport { formatISODateTime } from \"../../../model/utils\";\nexport var MessageView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageView, _React$Component);\n\n  function MessageView() {\n    _classCallCheck(this, MessageView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageView).apply(this, arguments));\n  }\n\n  _createClass(MessageView, [{\n    key: \"render\",\n    value: function render() {\n      var messageAuthorContent = null;\n      messageAuthorContent = React.createElement(\"div\", {\n        className: \"message-view-author-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.props.message.user.names));\n      var messageReplyContent = null;\n\n      if (this.props.message.reply_to) {\n        messageReplyContent = React.createElement(\"div\", {\n          className: \"message-view-reply-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n\n      var messagePollContent = null;\n\n      if (this.props.message.polls.length > 0) {\n        messagePollContent = React.createElement(\"div\", {\n          className: \"message-view-polls-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }\n\n      var messageMediaContent = null;\n\n      if (this.props.message.media.length > 0) {\n        messageMediaContent = React.createElement(\"div\", {\n          className: \"message-view-media-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      var messageTextContent = null;\n\n      if (this.props.message.text) {\n        messageTextContent = React.createElement(\"div\", {\n          className: \"message-view-text-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, this.props.message.text);\n      }\n\n      var messageInfosContent = React.createElement(\"div\", {\n        className: \"message-view-info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-view-info-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, formatISODateTime(new Date(this.props.message.time))));\n      var cssClassName = 'message-view-other-content';\n\n      if (this.props.me) {\n        cssClassName = 'message-view-me-content';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"message-view-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cssClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, messageAuthorContent, messageReplyContent, messagePollContent, messageMediaContent, messageTextContent, messageInfosContent));\n    }\n  }]);\n\n  return MessageView;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/techWeb/Ducky/ducky/src/view/components/messages/MessageView.js"],"names":["React","formatISODateTime","MessageView","messageAuthorContent","props","message","user","names","messageReplyContent","reply_to","messagePollContent","polls","length","messageMediaContent","media","messageTextContent","text","messageInfosContent","Date","time","cssClassName","me","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEa;AACL,UAAIC,oBAAoB,GAAG,IAA3B;AACAA,MAAAA,oBAAoB,GAChB;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBC,KAA/B,CADJ,CADJ;AAMA,UAAIC,mBAAmB,GAAG,IAA1B;;AACA,UAAI,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,QAAvB,EAAiC;AAC7BD,QAAAA,mBAAmB,GACf;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,UAAIE,kBAAkB,GAAG,IAAzB;;AACA,UAAI,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAyBC,MAAzB,GAAkC,CAAtC,EAAyC;AACrCF,QAAAA,kBAAkB,GACd;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,UAAIG,mBAAmB,GAAG,IAA1B;;AACA,UAAI,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,KAAnB,CAAyBF,MAAzB,GAAkC,CAAtC,EAAyC;AACrCC,QAAAA,mBAAmB,GACf;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;AAED,UAAIE,kBAAkB,GAAG,IAAzB;;AACA,UAAI,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,IAAvB,EAA6B;AACzBD,QAAAA,kBAAkB,GACd;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,IADxB,CADJ;AAKH;;AAED,UAAIC,mBAAmB,GACnB;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKhB,iBAAiB,CAAC,IAAIiB,IAAJ,CAAS,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,IAA5B,CAAD,CADtB,CADJ,CADJ;AAQA,UAAIC,YAAY,GAAG,4BAAnB;;AACA,UAAI,KAAKhB,KAAL,CAAWiB,EAAf,EAAmB;AACfD,QAAAA,YAAY,GAAG,yBAAf;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKjB,oBADL,EAEKK,mBAFL,EAGKE,kBAHL,EAIKG,mBAJL,EAKKE,kBALL,EAMKE,mBANL,CADJ,CADJ;AAYH;AAvEL;;AAAA;AAAA,EAAiCjB,KAAK,CAACsB,SAAvC","sourcesContent":["import React from \"react\";\nimport { formatISODateTime } from \"../../../model/utils\";\n\nexport class MessageView extends React.Component {\n\n    render() {\n        let messageAuthorContent = null;\n        messageAuthorContent = (\n            <div className='message-view-author-content'>\n                <span>{this.props.message.user.names}</span>\n            </div>\n        );\n\n        let messageReplyContent = null;\n        if (this.props.message.reply_to) {\n            messageReplyContent = (\n                <div className='message-view-reply-container'>\n\n                </div>\n            );\n        } \n       \n        let messagePollContent = null;\n        if (this.props.message.polls.length > 0) {\n            messagePollContent = (\n                <div className='message-view-polls-container'>\n\n                </div>\n            );\n        }\n       \n        let messageMediaContent = null;\n        if (this.props.message.media.length > 0) {\n            messageMediaContent = (\n                <div className='message-view-media-container'>\n\n                </div>\n            );\n        }\n       \n        let messageTextContent = null;\n        if (this.props.message.text) {\n            messageTextContent = (\n                <div className='message-view-text-container'>\n                    {this.props.message.text}\n                </div>\n            );\n        }\n\n        let messageInfosContent = (\n            <div className='message-view-info-container'>\n                <div className='message-view-info-time'>\n                    {formatISODateTime(new Date(this.props.message.time))}\n                </div>\n            </div>\n        );\n\n        let cssClassName = 'message-view-other-content';\n        if (this.props.me) {\n            cssClassName = 'message-view-me-content';\n        }\n       \n        return (\n            <div className='message-view-container'>\n                <div className={cssClassName}>\n                    {messageAuthorContent}\n                    {messageReplyContent}\n                    {messagePollContent}\n                    {messageMediaContent}\n                    {messageTextContent}\n                    {messageInfosContent}\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}