{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/Ducky/ducky/src/view/components/feed/FeedContent.js\";\nimport React from \"react\";\nimport { FeedContentHome } from \"./FeedContentHome\";\nimport { FeedContentMessages } from \"./FeedContentMessages\";\nimport { FeedContentStories } from \"./FeedContentStories\";\nimport { FeedContentFriends } from \"./FeedContentFriends\";\nimport { FeedContentProfil } from \"./FeedContentProfil\";\nimport { User } from \"../../../model/objects/User\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { Message } from \"../../../model/objects/Message\";\nimport { Messages, MessagesStatus, MessageType } from \"../../../model/objects/Messages\";\nimport { Stories } from \"../../../model/objects/Stories\";\nimport { FeedContentUpdateProfil } from \"./FeedContentUpdateProfil\";\nexport var FeedContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedContent, _React$Component);\n\n  function FeedContent() {\n    _classCallCheck(this, FeedContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FeedContent).apply(this, arguments));\n  }\n\n  _createClass(FeedContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // Test\n      var numbers = [];\n\n      for (var i = 0; i < 1000; i++) {\n        numbers.push(i);\n      }\n\n      var users = require('../../../ressources/test_database/users.json');\n\n      var posts = require('../../../ressources/test_database/posts.json');\n\n      var messages = require('../../../ressources/test_database/messages.json');\n\n      var usersList = users.map(function (userObject) {\n        var user = User.fromJSON(userObject);\n        user.followers = numbers.slice(0, 100);\n        user.followings = numbers.slice(0, 75);\n        return user;\n      });\n      var postsList = posts.map(function (postObject) {\n        var post = Post.fromJSON(postObject);\n        post.location = postObject.city + ', ' + postObject.country;\n        post.user = usersList[post.user_id];\n        return post;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = postsList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var post = _step.value;\n          post.reply_to = postsList[post.reply_to_id];\n          var replies_id = [];\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = postsList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var other = _step4.value;\n              if (other.reply_to_id === post.id) replies_id.push(other.id);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          for (var _i3 = 0; _i3 < replies_id.length; _i3++) {\n            var id = replies_id[_i3];\n            post.replies.push(postsList[id]);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var messagesDict = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = messages[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _message = _step2.value;\n          if (!messagesDict[_message.user_id]) messagesDict[_message.user_id] = [];\n\n          messagesDict[_message.user_id].push(_message.id);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var messagesList = [];\n\n      for (var otherUserId in messagesDict) {\n        var messagesIds = messagesDict[otherUserId];\n        var otherUser = usersList[otherUserId];\n        var messages_ = new Messages(otherUserId, usersList[otherUserId].profil_picture_src, MessageType.simple, usersList[otherUserId].names, new Date(), MessagesStatus.received);\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = messagesIds[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var messageId = _step3.value;\n\n            try {\n              var message = new Message(messageId, messageId % 2 !== 0 ? otherUserId : this.props.user.id, messages[messageId].reply_to_id, new Date(messages[messageId].time), messages[messageId].text);\n              message.user = messageId % 2 !== 0 ? otherUser : this.props.user;\n              message.reply_to = new Message(message.reply_to_id, messageId % 2 === 0 ? otherUserId : this.props.user.id, 0, new Date(messages[message.reply_to_id].time), messages[message.reply_to_id].text);\n              message.reply_to.user = messageId % 2 === 0 ? otherUser : this.props.user;\n              messages_.messages.push(message);\n            } catch (except) {}\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        messagesList.push(messages_);\n      }\n\n      for (var _i = 0; _i < messagesList.length; _i++) {\n        var _messages_ = messagesList[_i];\n\n        _messages_.messages.sort(function (m1, m2) {\n          return new Date(m1.time) - new Date(m2.time);\n        });\n\n        _messages_.time = _messages_.messages[_messages_.messages.length - 1].time;\n      }\n\n      messagesList.sort(function (m1, m2) {\n        return new Date(m2.time) - new Date(m1.time);\n      });\n      var stories = new Stories('abcdefghijklmnopqrstuvwxyz', require('../../../ressources/profil_test.png'), 'Ben Kabongo', new Date('02 April 2022 13:49'), false, false);\n\n      for (var _i2 = 0; _i2 < 10; _i2++) {\n        stories.stories.push(_i2);\n      } // \n\n\n      var content = null;\n\n      switch (this.props.contentId) {\n        case 'stories':\n          content = React.createElement(FeedContentStories, {\n            storiesList: [stories, stories, stories, stories, stories, stories],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          });\n          break;\n\n        case 'messages':\n          content = React.createElement(FeedContentMessages, {\n            user: this.props.user,\n            messagesList: messagesList,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n          break;\n\n        case 'profil':\n          var postsUser = postsList.filter(function (post) {\n            return post.user_id === _this.props.user.id;\n          });\n          content = React.createElement(FeedContentProfil, {\n            user: this.props.user,\n            me: true,\n            posts: postsUser,\n            handleUpdateProfil: this.props.handleUpdateProfil,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          });\n          break;\n\n        case 'other-profil':\n          content = React.createElement(FeedContentProfil, {\n            user: this.props.user,\n            me: true,\n            posts: postsUser,\n            handleUpdateProfil: this.props.handleUpdateProfil,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          });\n          break;\n\n        case 'profil-update':\n          content = React.createElement(FeedContentUpdateProfil, {\n            user: this.props.user,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          });\n          break;\n\n        case 'friends':\n          content = React.createElement(FeedContentFriends, {\n            user: this.props.user,\n            followers: usersList.slice(0, 50),\n            followings: usersList.slice(50, 100),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          });\n          break;\n\n        case 'suggestions':\n          break;\n\n        case 'statistics':\n          break;\n\n        case 'parameters':\n          break;\n\n        default:\n          // home\n          content = React.createElement(FeedContentHome, {\n            user: this.props.user,\n            stories: [1, 2, 3, 4, 5],\n            posts: postsList.slice(0, 20),\n            handleProfil: this.props.handleProfil,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"feed-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return FeedContent;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/Ducky/ducky/src/view/components/feed/FeedContent.js"],"names":["React","FeedContentHome","FeedContentMessages","FeedContentStories","FeedContentFriends","FeedContentProfil","User","Post","Message","Messages","MessagesStatus","MessageType","Stories","FeedContentUpdateProfil","FeedContent","numbers","i","push","users","require","posts","messages","usersList","map","userObject","user","fromJSON","followers","slice","followings","postsList","postObject","post","location","city","country","user_id","reply_to","reply_to_id","replies_id","other","id","replies","messagesDict","message","messagesList","otherUserId","messagesIds","otherUser","messages_","profil_picture_src","simple","names","Date","received","messageId","props","time","text","except","sort","m1","m2","length","stories","content","contentId","postsUser","filter","handleUpdateProfil","handleProfil","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FeedContentHome } from \"./FeedContentHome\";\nimport { FeedContentMessages } from \"./FeedContentMessages\";\nimport { FeedContentStories } from \"./FeedContentStories\";\nimport { FeedContentFriends } from \"./FeedContentFriends\";\nimport { FeedContentProfil } from \"./FeedContentProfil\";\n\nimport { User } from \"../../../model/objects/User\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { Message } from \"../../../model/objects/Message\";\nimport { Messages, MessagesStatus, MessageType } from \"../../../model/objects/Messages\";\nimport { Stories } from \"../../../model/objects/Stories\";\nimport { FeedContentUpdateProfil } from \"./FeedContentUpdateProfil\";\n\nexport class FeedContent extends React.Component {\n\n    render() {\n        // Test\n        let numbers = [];\n        for (let i=0; i < 1000; i++) numbers.push(i);\n\n        let users = require('../../../ressources/test_database/users.json');\n        let posts = require('../../../ressources/test_database/posts.json');\n        let messages = require('../../../ressources/test_database/messages.json');\n\n        let usersList = users.map(userObject => {\n            let user = User.fromJSON(userObject);\n            user.followers = numbers.slice(0, 100);\n            user.followings = numbers.slice(0, 75);\n            return user;\n        });\n\n        let postsList = posts.map(postObject => {\n            let post = Post.fromJSON(postObject);\n            post.location = postObject.city + ', ' + postObject.country;\n            post.user = usersList[post.user_id];\n            return post;\n        });\n        for (let post of postsList) {\n            post.reply_to = postsList[post.reply_to_id];\n\n            let replies_id = [];\n            for (let other of postsList) {\n                if (other.reply_to_id === post.id) \n                    replies_id.push(other.id);\n            }\n\n            for (let id of replies_id)\n                post.replies.push(postsList[id]);\n        }\n\n        let messagesDict = {};\n        for (let message of messages) {\n            if (!messagesDict[message.user_id])\n                messagesDict[message.user_id] = [];\n            messagesDict[message.user_id].push(message.id);\n        }\n        let messagesList = [];\n        for (let otherUserId in messagesDict) {\n            let messagesIds = messagesDict[otherUserId];\n            let otherUser = usersList[otherUserId];\n\n            let messages_ = new Messages(\n                otherUserId,\n                usersList[otherUserId].profil_picture_src,\n                MessageType.simple,\n                usersList[otherUserId].names,\n                new Date(),\n                MessagesStatus.received\n            );\n\n            for (let messageId of messagesIds) {\n                try {\n                let message = new Message(\n                    messageId, \n                    (messageId % 2 !== 0) ? otherUserId : this.props.user.id,\n                    messages[messageId].reply_to_id,\n                    new Date(messages[messageId].time),\n                    messages[messageId].text\n                );\n                message.user = (messageId % 2 !== 0) ? otherUser : this.props.user;\n                message.reply_to = new Message(\n                    message.reply_to_id,\n                    (messageId % 2 === 0) ? otherUserId : this.props.user.id,\n                    0,\n                    new Date(messages[message.reply_to_id].time),\n                    messages[message.reply_to_id].text\n                );\n                message.reply_to.user = (messageId % 2 === 0) ? otherUser : this.props.user;\n\n                messages_.messages.push(message);\n                } catch (except) {\n                    \n                }\n            }\n\n            messagesList.push(messages_);\n        }\n\n        for (let messages_ of messagesList) {\n            messages_.messages.sort((m1, m2) => new Date(m1.time) - new Date(m2.time));\n            messages_.time = messages_.messages[messages_.messages.length-1].time;\n        }\n        messagesList.sort((m1, m2) => new Date(m2.time) - new Date(m1.time));\n\n        let stories = new Stories(\n            'abcdefghijklmnopqrstuvwxyz',\n            require('../../../ressources/profil_test.png'),\n            'Ben Kabongo',\n            new Date('02 April 2022 13:49'),\n            false,\n            false\n        )\n\n        for (let i=0; i < 10; i++)\n            stories.stories.push(i);\n\n        // \n\n        let content = null;\n        switch(this.props.contentId) {\n\n            case 'stories':\n                content = (\n                    <FeedContentStories \n                        storiesList={[stories, stories, stories, stories, stories, stories]}/>\n                );\n                break;\n\n            case 'messages':\n                content = (\n                    <FeedContentMessages \n                        user={this.props.user}\n                        messagesList={messagesList} />\n                );\n                break;\n\n            case 'profil':\n                let postsUser = postsList.filter(post => post.user_id === this.props.user.id);\n                content = (\n                    <FeedContentProfil \n                        user={this.props.user}\n                        me={true}\n                        posts={postsUser}\n                        handleUpdateProfil={this.props.handleUpdateProfil} />\n                );\n                break;\n\n            case 'other-profil':\n                content = (\n                    <FeedContentProfil \n                        user={this.props.user}\n                        me={true}\n                        posts={postsUser}\n                        handleUpdateProfil={this.props.handleUpdateProfil} />\n                );\n                break;\n\n            case 'profil-update':\n                content = (\n                    <FeedContentUpdateProfil\n                        user={this.props.user} />\n                );\n                break;\n\n            case 'friends':\n                content = (\n                    <FeedContentFriends \n                        user={this.props.user}\n                        followers={usersList.slice(0, 50)} \n                        followings={usersList.slice(50, 100)} />\n                );\n                break;\n\n            case 'suggestions':\n                break;\n\n            case 'statistics':\n                break;\n\n            case 'parameters':\n                break;\n\n            default: // home\n                content = (\n                    <FeedContentHome \n                        user={this.props.user}\n                        stories={[1,2,3,4,5]} \n                        posts={postsList.slice(0, 20)}\n                        handleProfil={this.props.handleProfil} />\n                );\n        }\n        return (\n            <div className='feed-content'>\n                {content}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}