{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/Ducky/ducky/src/view/components/feed/FeedContent.js\";\nimport React from \"react\";\nimport { FeedContentHome } from \"./FeedContentHome\";\nimport { FeedContentMessages } from \"./FeedContentMessages\";\nimport { FeedContentStories } from \"./FeedContentStories\";\nimport { FeedContentFriends } from \"./FeedContentFriends\";\nimport { FeedContentProfil } from \"./FeedContentProfil\";\nimport { User } from \"../../../model/objects/User\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { Messages, MessagesStatus } from \"../../../model/objects/Messages\";\nimport { Stories } from \"../../../model/objects/Stories\";\nexport var FeedContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FeedContent, _React$Component);\n\n  function FeedContent(props) {\n    _classCallCheck(this, FeedContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FeedContent).call(this, props));\n  }\n\n  _createClass(FeedContent, [{\n    key: \"render\",\n    value: function render() {\n      // Test\n      var numbers = [];\n\n      for (var i = 0; i < 1000; i++) {\n        numbers.push(i);\n      }\n\n      var users = require('../../../ressources/test_database/users.json');\n\n      var posts = require('../../../ressources/test_database/posts.json');\n\n      var usersList = users.map(function (userObject) {\n        var user = User.fromJSON(userObject);\n        user.followers = numbers.slice(0, 100);\n        user.followings = numbers.slice(0, 75);\n        return user;\n      });\n      var userId = 11;\n      var postsList = posts.map(function (postObject) {\n        var post = Post.fromJSON(postObject);\n        post.location = postObject.city + ', ' + postObject.country;\n        post.user = usersList[post.user_id];\n        return post;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = postsList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var post = _step.value;\n          post.reply_to = postsList[post.reply_to_id];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var messages = new Messages('abcdefghijklmnopqrstuvwxyz', require('../../../ressources/profil_test.png'), 'Ben Kabongo', new Date('02 April 2022 13:49'), MessagesStatus.send);\n      var stories = new Stories('abcdefghijklmnopqrstuvwxyz', require('../../../ressources/profil_test.png'), 'Ben Kabongo', new Date('02 April 2022 13:49'), false, false);\n\n      for (var _i = 0; _i < 10; _i++) {\n        stories.stories.push(_i);\n      } // \n\n\n      var content = null;\n\n      switch (this.props.contentId) {\n        case 'stories':\n          content = React.createElement(FeedContentStories, {\n            storiesList: [stories, stories, stories, stories, stories, stories],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          });\n          break;\n\n        case 'messages':\n          content = React.createElement(FeedContentMessages, {\n            messagesList: [messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages, messages],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n          break;\n\n        case 'profil':\n          var postsUser = postsList.filter(function (post) {\n            return post.user_id == userId;\n          });\n          content = React.createElement(FeedContentProfil, {\n            user: users[userId],\n            posts: postsUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n          break;\n\n        case 'friends':\n          content = React.createElement(FeedContentFriends, {\n            user: usersList[userId],\n            followers: usersList.slice(0, 50),\n            followings: usersList.slice(50, 100),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          });\n          break;\n\n        case 'suggestions':\n          break;\n\n        case 'statistics':\n          break;\n\n        case 'parameters':\n          break;\n\n        default:\n          // home\n          content = React.createElement(FeedContentHome, {\n            user: usersList[userId],\n            stories: [1, 2, 3, 4, 5],\n            posts: postsList.slice(0, 20),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"feed-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return FeedContent;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/Ducky/ducky/src/view/components/feed/FeedContent.js"],"names":["React","FeedContentHome","FeedContentMessages","FeedContentStories","FeedContentFriends","FeedContentProfil","User","Post","Messages","MessagesStatus","Stories","FeedContent","props","numbers","i","push","users","require","posts","usersList","map","userObject","user","fromJSON","followers","slice","followings","userId","postsList","postObject","post","location","city","country","user_id","reply_to","reply_to_id","messages","Date","send","stories","content","contentId","postsUser","filter","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,iCAAzC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAEI,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oFACTA,KADS;AAElB;;AAJL;AAAA;AAAA,6BAMa;AACL;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,IAAlB,EAAwBA,CAAC,EAAzB;AAA6BD,QAAAA,OAAO,CAACE,IAAR,CAAaD,CAAb;AAA7B;;AAEA,UAAIE,KAAK,GAAGC,OAAO,CAAC,8CAAD,CAAnB;;AACA,UAAIC,KAAK,GAAGD,OAAO,CAAC,8CAAD,CAAnB;;AAEA,UAAIE,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAU,UAAAC,UAAU,EAAI;AACpC,YAAIC,IAAI,GAAGhB,IAAI,CAACiB,QAAL,CAAcF,UAAd,CAAX;AACAC,QAAAA,IAAI,CAACE,SAAL,GAAiBX,OAAO,CAACY,KAAR,CAAc,CAAd,EAAiB,GAAjB,CAAjB;AACAH,QAAAA,IAAI,CAACI,UAAL,GAAkBb,OAAO,CAACY,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAlB;AACA,eAAOH,IAAP;AACH,OALe,CAAhB;AAMA,UAAIK,MAAM,GAAG,EAAb;AAEA,UAAIC,SAAS,GAAGV,KAAK,CAACE,GAAN,CAAU,UAAAS,UAAU,EAAI;AACpC,YAAIC,IAAI,GAAGvB,IAAI,CAACgB,QAAL,CAAcM,UAAd,CAAX;AACAC,QAAAA,IAAI,CAACC,QAAL,GAAgBF,UAAU,CAACG,IAAX,GAAkB,IAAlB,GAAyBH,UAAU,CAACI,OAApD;AACAH,QAAAA,IAAI,CAACR,IAAL,GAAYH,SAAS,CAACW,IAAI,CAACI,OAAN,CAArB;AACA,eAAOJ,IAAP;AACH,OALe,CAAhB;AAhBK;AAAA;AAAA;;AAAA;AAsBL,6BAAiBF,SAAjB,8HAA4B;AAAA,cAAnBE,IAAmB;AACxBA,UAAAA,IAAI,CAACK,QAAL,GAAgBP,SAAS,CAACE,IAAI,CAACM,WAAN,CAAzB;AACH;AAxBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BL,UAAIC,QAAQ,GAAG,IAAI7B,QAAJ,CACX,4BADW,EAEXS,OAAO,CAAC,qCAAD,CAFI,EAGX,aAHW,EAIX,IAAIqB,IAAJ,CAAS,qBAAT,CAJW,EAKX7B,cAAc,CAAC8B,IALJ,CAAf;AAQA,UAAIC,OAAO,GAAG,IAAI9B,OAAJ,CACV,4BADU,EAEVO,OAAO,CAAC,qCAAD,CAFG,EAGV,aAHU,EAIV,IAAIqB,IAAJ,CAAS,qBAAT,CAJU,EAKV,KALU,EAMV,KANU,CAAd;;AASA,WAAK,IAAIxB,EAAC,GAAC,CAAX,EAAcA,EAAC,GAAG,EAAlB,EAAsBA,EAAC,EAAvB;AACI0B,QAAAA,OAAO,CAACA,OAAR,CAAgBzB,IAAhB,CAAqBD,EAArB;AADJ,OA3CK,CA8CL;;;AAGA,UAAI2B,OAAO,GAAG,IAAd;;AACA,cAAO,KAAK7B,KAAL,CAAW8B,SAAlB;AAEI,aAAK,SAAL;AACID,UAAAA,OAAO,GACH,oBAAC,kBAAD;AACI,YAAA,WAAW,EAAE,CAACD,OAAD,EAAUA,OAAV,EAAmBA,OAAnB,EAA4BA,OAA5B,EAAqCA,OAArC,EAA8CA,OAA9C,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIA;;AAEJ,aAAK,UAAL;AACIC,UAAAA,OAAO,GACH,oBAAC,mBAAD;AACI,YAAA,YAAY,EAAE,CAACJ,QAAD,EAAWA,QAAX,EAAqBA,QAArB,EAA+BA,QAA/B,EAAyCA,QAAzC,EAAmDA,QAAnD,EACVA,QADU,EACAA,QADA,EACUA,QADV,EACoBA,QADpB,EAC8BA,QAD9B,EACwCA,QADxC,EACkDA,QADlD,EAEVA,QAFU,EAEAA,QAFA,EAEUA,QAFV,EAEoBA,QAFpB,EAE8BA,QAF9B,EAEwCA,QAFxC,EAEkDA,QAFlD,EAGVA,QAHU,EAGAA,QAHA,EAGUA,QAHV,EAGoBA,QAHpB,EAG8BA,QAH9B,EAGwCA,QAHxC,EAGkDA,QAHlD,EAIVA,QAJU,EAIAA,QAJA,EAIUA,QAJV,EAIoBA,QAJpB,EAI8BA,QAJ9B,EAIwCA,QAJxC,EAIkDA,QAJlD,EAKVA,QALU,EAKAA,QALA,EAKUA,QALV,EAKoBA,QALpB,EAK8BA,QAL9B,EAKwCA,QALxC,EAKkDA,QALlD,EAMVA,QANU,EAMAA,QANA,EAMUA,QANV,EAMoBA,QANpB,EAM8BA,QAN9B,EAMwCA,QANxC,EAMkDA,QANlD,EAOVA,QAPU,EAOAA,QAPA,EAOUA,QAPV,EAOoBA,QAPpB,EAO8BA,QAP9B,EAOwCA,QAPxC,EAOkDA,QAPlD,EAQVA,QARU,EAQAA,QARA,EAQUA,QARV,EAQoBA,QARpB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYA;;AAEJ,aAAK,QAAL;AACI,cAAIM,SAAS,GAAGf,SAAS,CAACgB,MAAV,CAAiB,UAAAd,IAAI;AAAA,mBAAIA,IAAI,CAACI,OAAL,IAAgBP,MAApB;AAAA,WAArB,CAAhB;AACAc,UAAAA,OAAO,GACH,oBAAC,iBAAD;AACI,YAAA,IAAI,EAAEzB,KAAK,CAACW,MAAD,CADf;AAEI,YAAA,KAAK,EAAEgB,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKA;;AAEJ,aAAK,SAAL;AACIF,UAAAA,OAAO,GACH,oBAAC,kBAAD;AACI,YAAA,IAAI,EAAEtB,SAAS,CAACQ,MAAD,CADnB;AAEI,YAAA,SAAS,EAAER,SAAS,CAACM,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAFf;AAGI,YAAA,UAAU,EAAEN,SAAS,CAACM,KAAV,CAAgB,EAAhB,EAAoB,GAApB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMA;;AAEJ,aAAK,aAAL;AACI;;AAEJ,aAAK,YAAL;AACI;;AAEJ,aAAK,YAAL;AACI;;AAEJ;AAAS;AACLgB,UAAAA,OAAO,GACH,oBAAC,eAAD;AACI,YAAA,IAAI,EAAEtB,SAAS,CAACQ,MAAD,CADnB;AAEI,YAAA,OAAO,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAFb;AAGI,YAAA,KAAK,EAAEC,SAAS,CAACH,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AApDR;;AA2DA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKgB,OADL,CADJ;AAKH;AAxHL;;AAAA;AAAA,EAAiCzC,KAAK,CAAC6C,SAAvC","sourcesContent":["import React from \"react\";\nimport { FeedContentHome } from \"./FeedContentHome\";\nimport { FeedContentMessages } from \"./FeedContentMessages\";\nimport { FeedContentStories } from \"./FeedContentStories\";\nimport { FeedContentFriends } from \"./FeedContentFriends\";\nimport { FeedContentProfil } from \"./FeedContentProfil\";\n\nimport { User } from \"../../../model/objects/User\";\nimport { Post } from \"../../../model/objects/Post\";\nimport { Messages, MessagesStatus } from \"../../../model/objects/Messages\";\nimport { Stories } from \"../../../model/objects/Stories\";\n\nexport class FeedContent extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        // Test\n        let numbers = [];\n        for (let i=0; i < 1000; i++) numbers.push(i);\n\n        let users = require('../../../ressources/test_database/users.json');\n        let posts = require('../../../ressources/test_database/posts.json');\n\n        let usersList = users.map(userObject => {\n            let user = User.fromJSON(userObject);\n            user.followers = numbers.slice(0, 100);\n            user.followings = numbers.slice(0, 75);\n            return user;\n        });\n        let userId = 11;\n\n        let postsList = posts.map(postObject => {\n            let post = Post.fromJSON(postObject);\n            post.location = postObject.city + ', ' + postObject.country;\n            post.user = usersList[post.user_id];\n            return post;\n        });\n        for (let post of postsList) {\n            post.reply_to = postsList[post.reply_to_id];\n        }\n\n        let messages = new Messages(\n            'abcdefghijklmnopqrstuvwxyz',\n            require('../../../ressources/profil_test.png'),\n            'Ben Kabongo',\n            new Date('02 April 2022 13:49'),\n            MessagesStatus.send\n        );\n\n        let stories = new Stories(\n            'abcdefghijklmnopqrstuvwxyz',\n            require('../../../ressources/profil_test.png'),\n            'Ben Kabongo',\n            new Date('02 April 2022 13:49'),\n            false,\n            false\n        )\n\n        for (let i=0; i < 10; i++)\n            stories.stories.push(i);\n\n        // \n\n\n        let content = null;\n        switch(this.props.contentId) {\n\n            case 'stories':\n                content = (\n                    <FeedContentStories \n                        storiesList={[stories, stories, stories, stories, stories, stories]}/>\n                );\n                break;\n\n            case 'messages':\n                content = (\n                    <FeedContentMessages \n                        messagesList={[messages, messages, messages, messages, messages, messages,\n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, messages, messages, messages, \n                            messages, messages, messages, messages, ]} />\n                );\n                break;\n\n            case 'profil':\n                let postsUser = postsList.filter(post => post.user_id == userId);\n                content = (\n                    <FeedContentProfil \n                        user={users[userId]}\n                        posts={postsUser} />\n                );\n                break;\n\n            case 'friends':\n                content = (\n                    <FeedContentFriends \n                        user={usersList[userId]}\n                        followers={usersList.slice(0, 50)} \n                        followings={usersList.slice(50, 100)} />\n                )\n                break;\n\n            case 'suggestions':\n                break;\n\n            case 'statistics':\n                break;\n\n            case 'parameters':\n                break;\n\n            default: // home\n                content = (\n                    <FeedContentHome \n                        user={usersList[userId]}\n                        stories={[1,2,3,4,5]} \n                        posts={postsList.slice(0, 20)} />\n                );\n        }\n        return (\n            <div className='feed-content'>\n                {content}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}