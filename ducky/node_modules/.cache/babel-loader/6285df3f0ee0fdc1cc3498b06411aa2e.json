{"ast":null,"code":"import _classCallCheck from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/labicquette/L3/Ducky/ducky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/labicquette/L3/Ducky/ducky/src/view/components/posts/PostView.js\";\nimport React from \"react\";\nimport { UserProfilPreview } from \"../users/UserProfilPreview\";\nexport var PostView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostView, _React$Component);\n\n  function PostView(props) {\n    _classCallCheck(this, PostView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostView).call(this, props));\n  }\n\n  _createClass(PostView, [{\n    key: \"render\",\n    value: function render() {\n      var postPrologueContent = null;\n\n      if (this.props.post.prologue) {\n        postPrologueContent = React.createElement(\"div\", {\n          className: \"post-view-prologue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"post-view-prologue-username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, this.props.post.prologue.user.names), this.props.post.prologue.comment));\n      }\n\n      var postLocationContent = null;\n\n      if (this.props.post.location) {\n        postLocationContent = React.createElement(\"div\", {\n          className: \"post-view-content-content-post-infos-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, this.props.post.location + ' · '));\n      }\n\n      var postAudienceContent = React.createElement(\"div\", {\n        className: \"post-view-content-content-post-infos-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, (this.props.post.private ? 'Privé' : 'Public') + ' · '));\n      var postTimeContent = React.createElement(\"div\", {\n        className: \"post-view-content-content-post-infos-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.post.time.toLocaleString(\"fr-FR\")));\n      var postTextContent = React.createElement(\"div\", {\n        className: \"post-view-content-content-body-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.post.text));\n      var postPollContent = null;\n\n      if (this.props.post.polls.length > 0) {\n        postPollContent = React.createElement(\"div\", {\n          className: \"post-view-content-content-body-poll-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n\n      var postMediaContent = null;\n\n      if (this.props.post.media.length > 0) {\n        postMediaContent = React.createElement(\"div\", {\n          className: \"post-view-content-content-body-media-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n\n      var postReplyToContent = null;\n      var actionsBarContent = null;\n      var replyContent = null;\n\n      if (!this.props.isReply) {\n        if (this.props.post.reply_to) {\n          postReplyToContent = React.createElement(\"div\", {\n            className: \"post-view-content-content-body-post-replyto-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(PostView, {\n            post: this.props.post.reply_to,\n            isReply: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }));\n        }\n\n        actionsBarContent = React.createElement(\"div\", {\n          className: \"post-view-actions-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n        replyContent = React.createElement(\"div\", {\n          className: \"post-view-reply-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n\n      var userProfilPreviewContent = React.createElement(\"div\", {\n        className: \"post-view-user-profil-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(UserProfilPreview, {\n        user: this.props.post.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"post-view-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, postPrologueContent, React.createElement(\"div\", {\n        className: \"post-view-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-view-content-user-profile-picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.post.user.profil_picture_src,\n        className: \"post-view-content-user-profile-picture-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), userProfilPreviewContent), React.createElement(\"div\", {\n        className: \"post-view-content-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-view-content-content-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-view-content-content-header-user-infos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-view-content-content-header-user-infos-names\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.props.post.user.names), React.createElement(\"div\", {\n        className: \"post-view-content-content-header-user-infos-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, '@' + this.props.post.user.username, userProfilPreviewContent)), userProfilPreviewContent, React.createElement(\"div\", {\n        className: \"post-view-content-content-header-post-infos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, postLocationContent, postAudienceContent, postTimeContent)), React.createElement(\"div\", {\n        className: \"post-view-content-content-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, postTextContent, postPollContent, postMediaContent, postReplyToContent))), actionsBarContent, replyContent);\n    }\n  }]);\n\n  return PostView;\n}(React.Component);","map":{"version":3,"sources":["/home/labicquette/L3/Ducky/ducky/src/view/components/posts/PostView.js"],"names":["React","UserProfilPreview","PostView","props","postPrologueContent","post","prologue","user","names","comment","postLocationContent","location","postAudienceContent","private","postTimeContent","time","toLocaleString","postTextContent","text","postPollContent","polls","length","postMediaContent","media","postReplyToContent","actionsBarContent","replyContent","isReply","reply_to","userProfilPreviewContent","profil_picture_src","username","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { UserProfilPreview } from \"../users/UserProfilPreview\";\n\nexport class PostView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let postPrologueContent = null;\n        if (this.props.post.prologue) {\n            postPrologueContent = (\n                <div className='post-view-prologue'>\n                    <span>\n                        <a className='post-view-prologue-username'>\n                            {this.props.post.prologue.user.names}\n                        </a>\n                        {this.props.post.prologue.comment}\n                    </span>\n                </div>\n            );\n        }\n\n        let postLocationContent = null;\n        if (this.props.post.location) {\n            postLocationContent = (\n                <div className='post-view-content-content-post-infos-item'>\n                    <span>{this.props.post.location + ' · '}</span>\n                </div>\n            );\n        }\n\n        let postAudienceContent = (\n            <div className='post-view-content-content-post-infos-item'>\n                <span>{(this.props.post.private ? 'Privé' : 'Public') + ' · '}</span>\n            </div>\n        );\n        \n        let postTimeContent = (\n            <div className='post-view-content-content-post-infos-item'>\n                <span>{this.props.post.time.toLocaleString(\"fr-FR\")}</span>\n            </div>\n        );\n\n        let postTextContent = (\n            <div className='post-view-content-content-body-text'>\n                <p>{this.props.post.text}</p>\n            </div>\n        );\n\n        let postPollContent = null;\n        if (this.props.post.polls.length > 0) {\n            postPollContent =(\n                <div className='post-view-content-content-body-poll-container'>\n\n                </div>\n            );\n        }\n\n        let postMediaContent = null;\n        if (this.props.post.media.length > 0) {\n            postMediaContent = (\n                <div className='post-view-content-content-body-media-container'>\n\n                </div>\n            );\n        }\n\n    \n        let postReplyToContent = null;\n        let actionsBarContent = null;\n        let replyContent = null;\n\n        if (!this.props.isReply) {\n\n            if (this.props.post.reply_to) {\n                postReplyToContent = (\n                    <div className='post-view-content-content-body-post-replyto-container'>        \n                        <PostView post={this.props.post.reply_to} isReply={true}/>\n                    </div>\n                );\n            }\n\n            actionsBarContent = (\n                <div className='post-view-actions-bar'>\n\n                </div>\n            );\n\n            replyContent = (\n                <div className='post-view-reply-container'>\n                    \n                </div>\n            );\n\n        }\n\n        let userProfilPreviewContent = (\n            <div className='post-view-user-profil-preview'>\n                <UserProfilPreview user={this.props.post.user} />\n            </div>\n        );\n\n        return (\n            <div className='post-view-container'> \n                {postPrologueContent}\n                <div className='post-view-content'>\n                    <div className='post-view-content-user-profile-picture'>\n                        <img\n                            src={this.props.post.user.profil_picture_src}\n                            className='post-view-content-user-profile-picture-image' />\n                        {userProfilPreviewContent}\n                    </div>\n                    <div className='post-view-content-content'>\n                        <div className='post-view-content-content-header'>\n                            <div className='post-view-content-content-header-user-infos'>\n                                <div className='post-view-content-content-header-user-infos-names'>\n                                    {this.props.post.user.names}\n                                </div>\n                                <div className='post-view-content-content-header-user-infos-username'>\n                                    {'@' + this.props.post.user.username}\n                                    {userProfilPreviewContent}\n                                </div>\n                            </div>\n                            {userProfilPreviewContent}\n                            <div className='post-view-content-content-header-post-infos'>\n                                {postLocationContent}\n                                {postAudienceContent}\n                                {postTimeContent}\n                            </div>\n                        </div>\n                        <div className='post-view-content-content-body'>\n                            {postTextContent}\n                            {postPollContent}\n                            {postMediaContent}\n                            {postReplyToContent}                            \n                        </div>\n                    </div>\n                </div>\n                {actionsBarContent}\n                {replyContent}\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}